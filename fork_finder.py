"""
Fork Finder ‚Äî –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –±–ª–æ–∫–∏ Bitcoin, —á—Ç–æ–±—ã –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ—è–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ä–∫–æ–≤ (–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ä–∞–∑–≤–µ—Ç–≤–ª–µ–Ω–∏–π —Ü–µ–ø–∏).
"""

import requests
import time

def get_block_hash(height):
    url = f"https://blockstream.info/api/block-height/{height}"
    r = requests.get(url)
    r.raise_for_status()
    return r.text

def get_block_info(block_hash):
    url = f"https://blockstream.info/api/block/{block_hash}"
    r = requests.get(url)
    r.raise_for_status()
    return r.json()

def check_fork(height):
    main_hash = get_block_hash(height)
    main_info = get_block_info(main_hash)

    previous_hash = main_info["previousblockhash"]
    url = f"https://blockstream.info/api/block/{previous_hash}/children"
    r = requests.get(url)
    if r.status_code != 200:
        raise Exception("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—á–µ—Ä–Ω–∏—Ö –±–ª–æ–∫–æ–≤")

    children = r.json()
    if len(children) > 1:
        print(f"‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ {len(children)} –¥–æ—á–µ—Ä–Ω–∏—Ö –±–ª–æ–∫–æ–≤ –Ω–∞ –≤—ã—Å–æ—Ç–µ {height-1} ‚Äî –≤–æ–∑–º–æ–∂–Ω–æ, —Ñ–æ—Ä–∫!")
        for blk in children:
            ts = blk.get("timestamp", "")
            print(f" - {blk['id']} @ {ts}")
    else:
        print(f"‚úÖ –í—ã—Å–æ—Ç–∞ {height}: —Ñ–æ—Ä–∫ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω.")

def main():
    print("üå≤ Fork Finder –∑–∞–ø—É—â–µ–Ω. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 10 –±–ª–æ–∫–æ–≤...")
    tip = int(requests.get("https://blockstream.info/api/blocks/tip/height").text)

    for h in range(tip - 10, tip + 1):
        try:
            check_fork(h)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –Ω–∞ –≤—ã—Å–æ—Ç–µ {h}: {e}")
        time.sleep(1)

if __name__ == "__main__":
    main()
